<Application x:Class="SpeckleGSAUI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:SpeckleGSAUI"
             xmlns:dragablz="clr-namespace:Dragablz;assembly=Dragablz"
						 xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             Startup="Application_Startup">
  <Application.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Grey.xaml" />
				<ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.LightBlue.xaml" />
				<ResourceDictionary Source="pack://application:,,,/Dragablz;component/Themes/materialdesign.xaml"/>
			</ResourceDictionary.MergedDictionaries>

			<!-- tell Dragablz tab control to use the Material Design theme -->
			<Style TargetType="{x:Type dragablz:TabablzControl}" BasedOn="{StaticResource MaterialDesignTabablzControlStyle}" />

			<Style TargetType="materialDesign:BottomDashedLineAdorner">
				<Setter Property="Visibility" Value="Collapsed" />
			</Style>
			
			<Style x:Key="ButtonFocusVisual">
				<Setter Property="Control.Template">
					<Setter.Value>
						<ControlTemplate>
							<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
			<Style x:Key="AnalysisDesignToggle" TargetType="{x:Type ToggleButton}">
				<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
				<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
				<Setter Property="BorderThickness" Value="1"/>
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
				<Setter Property="HorizontalContentAlignment" Value="Center"/>
				<Setter Property="VerticalContentAlignment" Value="Center"/>
				<Setter Property="Padding" Value="1"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ToggleButton}">
							<StackPanel Orientation="Horizontal">
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
								<Border x:Name="design" Width="75" Height="25" Background="{DynamicResource PrimaryHueMidBrush}" Margin="10,0,0,0" BorderBrush="{DynamicResource PrimaryHueMidBrush}" BorderThickness="3 3 0 3" CornerRadius="2 0 0 2">
									<TextBlock x:Name="designText" Text="Design" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#FFFFFF"/>
								</Border>
								<Border x:Name="analysis" Width="75" Height="25" Background="{DynamicResource PrimaryHueMidBrush}" BorderBrush="{DynamicResource PrimaryHueMidBrush}" BorderThickness="0 3 3 3" CornerRadius="0 2 2 0">
									<TextBlock x:Name="analysisText" Text="Analysis" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#FFFFFF"/>
								</Border>
							</StackPanel>
							<ControlTemplate.Triggers>
								<Trigger Property="IsEnabled" Value="false">
									<Setter TargetName="design" Property="Background" Value="#EEEEEE"/>
									<Setter TargetName="design" Property="BorderBrush" Value="#EEEEEE"/>
									<Setter TargetName="analysis" Property="Background" Value="#EEEEEE"/>
									<Setter TargetName="analysis" Property="BorderBrush" Value="#EEEEEE"/>
								</Trigger>
								<Trigger Property="IsChecked" Value="false">
									<Setter TargetName="design" Property="Background" Value="White"/>
									<Setter TargetName="designText" Property="Foreground" Value="Black"/>
									<Setter TargetName="designText" Property="Foreground" Value="Black"/>
								</Trigger>
								<Trigger Property="IsChecked" Value="true">
									<Setter TargetName="analysis" Property="Background" Value="White"/>
									<Setter TargetName="analysisText" Property="Foreground" Value="Black"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="ContinuousSingleToggle" TargetType="{x:Type ToggleButton}">
				<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
				<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
				<Setter Property="BorderThickness" Value="1"/>
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
				<Setter Property="HorizontalContentAlignment" Value="Center"/>
				<Setter Property="VerticalContentAlignment" Value="Center"/>
				<Setter Property="Padding" Value="1"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ToggleButton}">
							<StackPanel Orientation="Horizontal">
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
								<Border x:Name="continuous" Width="75" Height="25" Background="{DynamicResource PrimaryHueMidBrush}" Margin="10,0,0,0" BorderBrush="{DynamicResource PrimaryHueMidBrush}" BorderThickness="3 3 0 3" CornerRadius="2 0 0 2">
									<TextBlock x:Name="continuousText" Text="Continuous" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#FFFFFF"/>
								</Border>
								<Border x:Name="single" Width="75" Height="25" Background="{DynamicResource PrimaryHueMidBrush}" BorderBrush="{DynamicResource PrimaryHueMidBrush}" BorderThickness="0 3 3 3" CornerRadius="0 2 2 0">
									<TextBlock x:Name="singleText" Text="Single" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#FFFFFF"/>
								</Border>
							</StackPanel>
							<ControlTemplate.Triggers>
								<Trigger Property="IsEnabled" Value="false">
									<Setter TargetName="continuous" Property="Background" Value="#EEEEEE"/>
									<Setter TargetName="continuous" Property="BorderBrush" Value="#EEEEEE"/>
									<Setter TargetName="single" Property="Background" Value="#EEEEEE"/>
									<Setter TargetName="single" Property="BorderBrush" Value="#EEEEEE"/>
								</Trigger>
								<Trigger Property="IsChecked" Value="false">
									<Setter TargetName="continuous" Property="Background" Value="White"/>
									<Setter TargetName="continuousText" Property="Foreground" Value="Black"/>
								</Trigger>
								<Trigger Property="IsChecked" Value="true">
									<Setter TargetName="single" Property="Background" Value="White"/>
									<Setter TargetName="singleText" Property="Foreground" Value="Black"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="TransparentButton" TargetType="Button">
				<Setter Property="OverridesDefaultStyle" Value="True"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="Button">
							<Border Name="border" 
                            BorderThickness="0"
                            BorderBrush="Transparent" 
                            Background="{TemplateBinding Background}">
								<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</ResourceDictionary>
	</Application.Resources>
</Application>
